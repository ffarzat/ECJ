parent.0 = ../../gp/koza/koza.params
parent.1 = ../../gp/ge/ge.params

#Basic parameters that we redefine
eval.problem = ec.gp.ge.GEProblem
pop.subpop.0.species = ec.gp.ge.GESpecies
pop.subpop.0.species.parser = ec.gp.ge.GrammarParser
pop.subpop.0.species.gp-species = ec.gp.GPSpecies
#pop.subpop.0.species.fitness = ec.gp.koza.KozaFitness
pop.subpop.0.species.ind = ec.gp.ge.GEIndividual
pop.subpop.0.species.min-gene = -128
pop.subpop.0.species.max-gene = 127
pop.subpop.0.species.mutation-prob = 0.01
pop.subpop.0.species.crossover-type = one
pop.subpop.0.species.genome-size = geometric
pop.subpop.0.species.geometric-prob = 0.85
pop.subpop.0.species.min-initial-size = 5

# The pipeline
pop.subpop.0.species.pipe = ec.breed.MultiBreedingPipeline
pop.subpop.0.species.pipe.num-sources = 3
pop.subpop.0.species.pipe.source.0 = ec.vector.breed.ListCrossoverPipeline
pop.subpop.0.species.pipe.source.0.source.0 = ec.gp.ge.breed.GETruncationPipeline
pop.subpop.0.species.pipe.source.0.source.0.source.0 = ec.select.TournamentSelection
pop.subpop.0.species.pipe.source.0.source.1 = same
pop.subpop.0.species.pipe.source.0.prob = 0.9
pop.subpop.0.species.pipe.source.1 = ec.vector.breed.GeneDuplicationPipeline
pop.subpop.0.species.pipe.source.1.source.0 = ec.gp.ge.breed.GETruncationPipeline
pop.subpop.0.species.pipe.source.1.source.0.source.0 = ec.select.TournamentSelection
pop.subpop.0.species.pipe.source.1.prob = 0.05
pop.subpop.0.species.pipe.source.2 = ec.vector.breed.VectorMutationPipeline
pop.subpop.0.species.pipe.source.2.source.0 = ec.select.TournamentSelection
pop.subpop.0.species.pipe.source.2.prob = 0.05
select.tournament.size = 7

# GP hacks
pop.subpop.0.species.gp-species.fitness = ec.gp.koza.KozaFitness
pop.subpop.0.species.gp-species.ind = ec.gp.GPIndividual
pop.subpop.0.species.gp-species.pipe = ec.breed.ReproductionPipeline
pop.subpop.0.species.gp-species.pipe.num-sources = 1
pop.subpop.0.species.gp-species.pipe.source.0 = ec.select.TournamentSelection


#defino os tipos 
gp.type.a.size = 3
gp.type.a.0.name = inteiro
gp.type.a.1.name = string
gp.type.a.2.name = nil


#Defino a árvore de execução
gp.tc.size = 1
gp.tc.0 = ec.gp.GPTreeConstraints
gp.tc.0.name = tc0
gp.tc.0.fset = f0
gp.tc.0.returns = nil



#Defino o Function Set
gp.fs.size=1
#FS do Escrever e Log
gp.fs.0 = ec.gp.GPFunctionSet
gp.fs.0.size = 5

gp.fs.0.func.0 = ec.app.GITeste.X
gp.fs.0.func.0.nc = nc0

gp.fs.0.func.1 = ec.app.GITeste.Y
gp.fs.0.func.1.nc = nc0

gp.fs.0.func.2 = ec.app.GITeste.Somar
gp.fs.0.func.2.nc = nc2

gp.fs.0.func.3 = ec.app.GITeste.Escrever
gp.fs.0.func.3.nc = nc1

gp.fs.0.func.4 = ec.app.GITeste.Salvarlog
gp.fs.0.func.4.nc = nc1


# Problema
eval.problem.problem = ec.app.GITeste.GITesteProblem
eval.problem.problem.data = ec.app.GITeste.GITesteData

#Gramatica
ge.species.file.0 = GITeste.grammar


#fixo os valores para a soma
eval.problem.problem.currentX = 4
eval.problem.problem.currentY = 6

#Mudo para simple Fit
pop.subpop.0.species.fitness = ec.simple.SimpleFitness



